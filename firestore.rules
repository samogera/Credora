rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Any authenticated user can read partner information and their products.
    // Only partners can modify their own data (future implementation).
    match /partners/{partnerId} {
      allow read: if request.auth != null;

      // Products subcollection
      match /products/{productId} {
         allow read: if request.auth != null;
         // For now, allow any authenticated user to create/delete for testing.
         // In production, you would lock this down to the partner owner.
         allow write: if request.auth != null;
      }
    }

    // Any authenticated user can read applications.
    // Users can only create applications for themselves.
    // Users can only update/delete their own applications.
    match /applications/{appId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
    }

    // Users can only create/read/update notifications intended for them.
    // Any authenticated user can create notifications (e.g., a partner notifying a user).
    // Partners can read partner-specific notifications.
    match /notifications/{notificationId} {
      allow read: if (request.auth.uid == resource.data.userId) || (resource.data.for == 'partner' && request.auth != null);
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.userId;
    }
  }
}
