rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user profile
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Users can only read or write their own data
      // Partners need to be able to read user profiles for applications
      allow read: if isSignedIn();
      allow update, delete: if isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'partners' collection
    match /partners/{partnerId} {
      // Any authenticated user can read partner info (e.g., to see loan products)
      allow read: if isSignedIn();
      
      // Only authenticated users (partners) can write/update their own profile
      // In a real app, you'd have a 'roles' claim on the auth token.
      // For this simulation, any auth'd user can act as a partner.
      allow write: if isSignedIn();

      // Rules for partner-specific 'products' subcollection
      match /products/{productId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn(); // Allow partners to add/remove products
      }
    }

    // Rules for the 'applications' collection
    match /applications/{applicationId} {
      // Users can only create applications for themselves
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      
      // Users can read their own applications.
      // Partners can read all applications.
      // For simulation, we'll allow any authenticated user to read.
      allow read: if isSignedIn();
      
      // Partners can update the status of an application
      allow update: if isSignedIn(); 
    }

    // Rules for the 'notifications' collection
    match /notifications/{notificationId} {
      // Logged-in users can create notifications (e.g. user applies for loan -> partner gets notification)
      allow create: if isSignedIn();
      
      // Users can read notifications intended for them
      allow read: if isSignedIn() && (
        (request.resource.data.for == 'user' && request.resource.data.userId == request.auth.uid) ||
        (request.resource.data.for == 'partner') // For simulation, any partner can read partner notifications
      );
      
      // Users can update their own notifications (e.g. to mark as read)
      allow update: if isSignedIn() && (
        (request.resource.data.for == 'user' && request.resource.data.userId == request.auth.uid) ||
        (request.resource.data.for == 'partner')
      );
    }
  }
}

    