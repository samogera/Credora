
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Users can only read and write to their own document
    match /users/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // Any signed-in user can read the list of partners and their products
    match /partners/{partnerId} {
      allow read: if isSignedIn();
      // Only the partner can write to their own profile and subcollections
      allow write: if isSignedIn() && partnerId == 'partner-1'; // Simplified for demo
      
      match /products/{productId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && partnerId == 'partner-1'; // Simplified for demo
      }
    }

    // Rules for applications
    match /applications/{appId} {
      allow read: if isSignedIn();
      
      // A user can only create an application for themselves.
      // They cannot specify a status other than 'Pending'.
      allow create: if isSignedIn() 
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.status == 'Pending';

      // Only a partner can update the status of an application.
      // The user cannot change any other fields.
      allow update: if isSignedIn()
                    && request.resource.data.status != resource.data.status
                    && request.resource.data.userId == resource.data.userId; // Ensure userId is not changed
    }

    // Rules for notifications
    match /notifications/{notifId} {
       // Users can read their own notifications
       // Partners can read partner notifications
      allow read: if isSignedIn() && 
                    (request.resource.data.userId == request.auth.uid || request.resource.data.for == 'partner');
                    
      allow create: if isSignedIn();
      allow update: if isSignedIn() && request.resource.data.read == true;
    }
  }
}
